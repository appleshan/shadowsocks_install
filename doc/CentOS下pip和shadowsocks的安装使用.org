#+TITLE:CentOS 下 pip 和 shadowsocks 的安装使用

Pip 是安装 Python 包的工具，提供了安装、列举已安装包、升级以及卸载包的功能。Pip 是
对 easy_install 的取代，提供了和 easy_install 相同的查找包的功能，因此可以使用
easy_install 安装的包也同样可以使用 pip 进行安装。
目前有很多 Python 程序都是可以直接通过 Pip 来一键安装了，比如众所周知的
Django、Markdown、Shadowsocks 等。

* pip 的用法
简要介绍一下 pip 的用法（以安装 Shadowsocks 举例）：
** 1、安装 package
pip install shadowsocks
** 2、列出已安装的 packages
pip freeze
** 3、安装特定版本的 package
pip install shadowsocks=1.3.3′
pip install shadowsocks>1.0,<1.3.3′
** 4、升级已安装的 package 到最新版本
pip install -U shadowsocks
** 5、卸载已安装的 package
pip uninstall shadowsocks
** 6、查询已安装的 package
pip search “shadowsocks”

* 安装 python
安装 Pip 之前必须要先安装 setuptools，安装 setuptools 之前，必须要安装了 Python，这之
间的安装过程存在依赖关系，缺一不可。因此，整个过程还是比较麻烦的。
** 1、	检查 Python 版本
python –version
CentOS6.5 默认安装的 Python 版本是 2.6.6，返回值为：Python 2.6.6
** 2、	安装 setuptools
yum install -y python-setuptools
安装完毕后，easy_install 命令就可以使用了。
** 3、	安装 pip
easy_install pip
通过 easy_install 安装 pip 是最为简单的方法。pip 默认安装到/usr/bin 目录下。
** 4、	安装 shadowsocks
pip install shadowsocks

* Shadowsocks 的配置和使用
至于 Shadowsocks 可以拿来做什么，这里就毋须赘述了。直接开始吧。
** 1、	创建 Shadowsocks 的配置文件：
CentOS 下通过 vim 创建该配置，运行命令：
vi /etc/shadowsocks.json
内容如下：
#+BEGIN_SRC bash
{
    "server":"your_server_ip",
    "server_port":8989,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"yourpassword",
    "timeout":600,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 1
}
#+END_SRC

各字段的含义：
server：服务器 IP (IPv4/IPv6)，注意这也将是服务端监听的 IP 地址
server_port：监听的服务器端口
local_address：本地监听的 IP 地址
local_port：本地端端口
password：用来加密的密码
timeout：超时时间（秒）
method：加密方法，可选择 “bf-cfb”, “aes-256-cfb”, “des-cfb”, “rc4”, 等等。默认
是一种不安全的加密，推荐用 “aes-256-cfb”
fast_open：true 或 false。如果你的服务器 Linux 内核在 3.7+，可以开启 fast_open
以降低延迟。开启方法：

echo 3 > /proc/sys/net/ipv4/tcp_fastopen

开启之后，将 fast_open 的配置设置为 true 即可。
works：works 数量，默认为 1

** 2、	安装 M2Crypto
默认加密方法 table 速度很快，但很不安全。推荐使用 “aes-256-cfb” 或者 “bf-cfb”。
请不要使用 “rc4″，它不安全。如果选择 “table” 之外的加密，需要安装 M2Crypto。
先安装依赖包：

yum install -y openssl-devel gcc swig python-devel autoconf libtool

** 安装 setuptools：

wget --no-check-certificate https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
python ez_setup.py install

再通过 pip 安装 M2Crypto：

pip install M2Crypto

** 3、	安装 gevent
安装 gevent 可以提高 Shadowsocks 的性能。CentOS 下安装 gevent 依赖 libevent 和 greenlet。
安装 libevent：
yum install -y libevent
安装 greenlet：
pip install greenlet
安装 gevent：
pip install gevent

** 4、	命令行参数（服务器端启动命令）
ssserver -c /etc/shadowsocks.json
如果想在后台一直运行 Shadowsocks，启动命令如下：

nohup ssserver -c /etc/shadowsocks.json > /dev/null 2>&1 &
备注：关于 nohup，是可以让程序在后台运行的命令。

同时可以用命令行参数覆盖 /etc/shadowsocks.json 里的设置：
sslocal -s 服务器地址 -p 服务器端口 -l 本地端端口 -k 密码 -m 加密方法
ssserver -p 服务器端口 -k 密码 -m 加密方法

备注：sslocal 是客户端程序；ssserver 是服务端程序。

** 5、	防火墙设置（如有）
编辑防火墙配置文件/etc/sysconfig/iptables，将服务器端口（server_port）放行。
新增一条防火墙规则：

-A INPUT -m state --state NEW -m tcp -p tcp --dport 8989 -j ACCEPT
重启防火墙 iptables：
service iptables restart

至此，服务器端的 Shadowsocks 安装和配置完毕。

** 6、客户端配置
Windows 客户端有图形界面也有命令行，我们这里以配置图形化界面的 shadowsocks-csharp 为例说明。
下载客户端 shadowsocks-csharp（最新版 1.1.2）：
https://shadowsocks-csharp.googlecode.com/files/shadowsocks-csharp-1.1.2.zip

解压至任意目录下，双击 shadowsocks-csharp.exe 运行程序，各参数选项填入：

Server IP:   服务器 IP (IPv4/IPv6)，填入在服务器端设置的 IP 地址（server）
Server Port: 服务器端口，填入在服务器端设置的端口号（server_port）
Password:    用来加密的密码，填入在服务器端设置的加密密码（password）
Proxy Port:  本地端代理的端口，填入在服务器端设置的本地端端口（local_port）
Encryptor:   加密方法，填入在服务器端设置的加密方法（method）

注意：本地客户端填写的参数一定要与服务器端设置的一致才可以。

另有一款客户端 shadowsocks-gui（推荐）可供选择，下载地址：
https://sourceforge.net/projects/shadowsocksgui/files/dist/

下面就可以利用浏览器插件无障碍浏览国外网站了。插件的设置过程这里略过。
AutoProxy（用于 Firefox）、Proxy SwitchySharp（用于 Chrome）
